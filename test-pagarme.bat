@echo off
echo ========================================
echo         TESTE PAGARME PIX - TYLER API
echo ========================================
echo.

echo üîß Configura√ß√µes necess√°rias:
echo    1. Configure PAGARME_API_KEY no arquivo .env
echo    2. Defina PAYMENT_PROVIDER=pagarme no .env
echo    3. Cadastre-se em: https://dashboard.pagar.me/
echo.

echo üîç Testando endpoint /health...
powershell -Command "try { $response = Invoke-RestMethod -Uri 'http://localhost:8080/health' -Method GET; Write-Host '‚úÖ Health OK:'; $response | ConvertTo-Json -Depth 3 } catch { Write-Host '‚ùå Erro:' $_.Exception.Message }"

echo.
echo üöÄ Testando cria√ß√£o PIX via Pagarme...
powershell -Command "try { $body = @{ amount = 50.00; description = 'Teste PIX Pagarme Tyler'; payer = @{ name = 'Maria Silva'; email = 'maria@teste.com'; cpf = '19119119100' } } | ConvertTo-Json -Depth 3; Write-Host 'Enviando:' $body; $response = Invoke-RestMethod -Uri 'http://localhost:8080/api/checkout' -Method POST -Body $body -ContentType 'application/json'; Write-Host '‚úÖ PIX Pagarme criado:'; $response | ConvertTo-Json -Depth 3 } catch { Write-Host '‚ùå Erro:' $_.Exception.Message }"

echo.
echo üìä Testando consulta de status...
set /p PAYMENT_ID="Digite o Payment ID retornado acima (ou pressione Enter para usar 'test'): "
if "%PAYMENT_ID%"=="" set PAYMENT_ID=test

powershell -Command "try { $response = Invoke-RestMethod -Uri 'http://localhost:8080/api/payment/status/%PAYMENT_ID%' -Method GET; Write-Host '‚úÖ Status consultado:'; $response | ConvertTo-Json -Depth 3 } catch { Write-Host '‚ùå Erro:' $_.Exception.Message }"

echo.
echo üß™ Testando webhook (simula√ß√£o)...
powershell -Command "try { $body = @{ event = 'transaction.paid'; data = @{ id = 'tran_test123'; status = 'paid'; amount = 5000 } } | ConvertTo-Json -Depth 3; $response = Invoke-RestMethod -Uri 'http://localhost:8080/api/webhooks/payment' -Method POST -Body $body -ContentType 'application/json'; Write-Host '‚úÖ Webhook processado:'; $response | ConvertTo-Json -Depth 3 } catch { Write-Host '‚ùå Erro:' $_.Exception.Message }"

echo.
echo ========================================
echo         INFORMA√á√ïES IMPORTANTES
echo ========================================
echo.
echo üìã API Pagarme:
echo    ‚Ä¢ Documenta√ß√£o: https://docs.pagar.me/
echo    ‚Ä¢ Dashboard: https://dashboard.pagar.me/
echo    ‚Ä¢ Taxa PIX: 0,99%%
echo    ‚Ä¢ Sandbox: Mesmo endpoint da produ√ß√£o
echo.
echo üîë Para configurar:
echo    1. Crie conta em: https://dashboard.pagar.me/
echo    2. Copie sua API Key de teste
echo    3. Configure no arquivo .env:
echo       PAGARME_API_KEY=ak_test_SUA_CHAVE_AQUI
echo       PAYMENT_PROVIDER=pagarme
echo.
echo ‚ú® Vantagens do Pagarme:
echo    ‚Ä¢ API moderna e bem documentada
echo    ‚Ä¢ Muito usado por fintechs
echo    ‚Ä¢ Suporte robusto
echo    ‚Ä¢ Webhooks em tempo real
echo.
echo ========================================
pause